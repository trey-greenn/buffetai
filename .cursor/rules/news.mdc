---
description: 
globs: 
alwaysApply: false
---
# 📬 Buffetai Newsletter Tool — Product Blueprint

## 🧠 Overview
The Buffetai Newsletter Tool helps users create automated AI-generated newsletters tailored to their interests. Users define newsletter sections (topics, preferences, and delivery frequency), and the system handles the rest: sourcing content, summarizing it with AI, formatting it into an email, and sending it on schedule.

This tool is designed for those who want to master their information diet, reduce noise, and stay consistently informed on what matters to them.

---

## 🛠️ Workflow Summary

1. **User creates one or more Newsletter Sections**
   - Fields include:
     - Topic (e.g., “AI in Medicine”)
     - Instructions to guide summaries (e.g., “Focus on recent FDA approvals”)
     - Frequency: Daily, Weekly, Bi-Weekly

2. **User saves Section Settings**
   - Stored in Supabase (`newsletter_sections` table)
   - Multiple sections can be created per user

3. **User clicks 'Create Newsletter'**
   - Triggers a UI where:
     - Articles are pulled from a News API based on the saved topic
     - Users preview and optionally select sample articles
     - AI generates summaries for each article
     - Newsletter preview is rendered in an email-style template

4. **User can choose to:**
   - Send Now (trigger Resend email immediately)
   - Schedule Later (define a future send time)

5. **Automated Pipeline (Background Job)**
   - Based on saved frequency:
     - Pulls new articles regularly
     - Summarizes with OpenAI
     - Composes email from summaries
     - Sends automatically using Resend
     - No user intervention needed after setup

---

## 📄 Core Tables (Supabase)

### newsletter_sections
- user_id
- section_id
- topic
- instructions
- frequency
- created_at

### raw_articles
- article_id
- section_id
- title
- source_url
- raw_content
- published_at
- created_at

### article_summaries
- summary_id
- article_id
- section_id
- summary_text
- keywords
- ai_model
- created_at

### scheduled_emails
- user_id
- section_id
- send_date
- status: pending | sent | failed
- html_content

### newsletter_history
- user_id
- section_id
- send_date
- status
- error_msg (optional)

---

## 🧠 AI Interaction Logic

- Summarization prompt (for OpenAI):
  - “You are a helpful assistant writing for a personal newsletter. Please summarize the following article in a way that’s informative and clear:”
  - Includes user's custom instructions from section
- Model: GPT-4-Turbo or GPT-3.5-Turbo
- Summaries are cached and stored in Supabase

---

## 📧 Email Template Structure

- Greeting: "Here's your digest on [Topic]"
- For each article:
  - Title (linked to source)
  - Summary (AI-generated)
- Footer: "Generated by Buffetai"

---

## 🛜 Background Tasks

- Runs via Supabase Edge Functions or Vercel Cron
- Daily check:
  - Has this user-section been fulfilled?
  - If not, fetch → summarize → send → log

---

## ✅ UX Requirements

- All sections and summaries should be editable
- "Regenerate Summary" button per article
- Toggle article ON/OFF for final newsletter
- Live preview of email format before sending

---

## 🔒 Auth & Security

- All user data and newsletter config saved under `user_id`
- Supabase RLS enabled
- OpenAI & Resend calls authenticated server-side

---

## 🧪 Test Flow (Sample Scenario)

1. User signs in
2. Creates a Newsletter Section:
   - Topic: “Climate Tech”
   - Instructions: “Focus on US companies and breakthroughs”
   - Frequency: Weekly
3. Clicks "Create Newsletter"
4. Buffetai pulls 5 latest articles on Climate Tech
5. Each article summarized with OpenAI
6. Newsletter email generated
7. User clicks "Send Now"
8. Newsletter is delivered to their inbox
9. Weekly, a new digest is automatically sent

---

## 🧩 Tech Stack

- Frontend: Next.js, TypeScript, Tailwind
- Backend: Supabase (PostgreSQL + RLS + Edge Functions)
- AI: OpenAI API (GPT-4-Turbo / GPT-3.5)
- Email: Resend API
- Build: Vite (for performance or tooling as needed)

---

## 🧠 Product Purpose

Buffetai helps users **master their content diet** by:
- Giving them control over what they read
- Curating information with AI
- Delivering digestible, valuable content directly to their inbox
- Saving time and avoiding content overwhelm

---

# End of File
